<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Beanify.Views.LoginView"
             xmlns:converters="clr-namespace:Beanify.Utils.Converters"
             xmlns:local="clr-namespace:Beanify.Views"
             xmlns:behaviors="clr-namespace:Beanify.Utils.Behaviors"
             xmlns:custom="clr-namespace:Beanify.Utils.Controls"
             xmlns:b="clr-namespace:Xamarin.Forms.BehaviorsPack;assembly=Xamarin.Forms.BehaviorsPack"
             xmlns:forms="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
             BackgroundImage="bg.png"
             NavigationPage.HasNavigationBar="false"
             BindingContext="{Binding LoginViewModel, Source={StaticResource Locator}}">
    <ContentPage.Behaviors>
        <b:EventToCommandBehavior EventName="SizeChanged" Command="{Binding Commands[SizeChanged]}" />
    </ContentPage.Behaviors>

    <ContentPage.Resources>
        <ResourceDictionary>
           
        </ResourceDictionary>
        
    </ContentPage.Resources>    
    <ContentPage.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="4*"></RowDefinition>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="3*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="8*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Image  Source="logo.png" Grid.Row="0" Grid.Column="1" VerticalOptions="EndAndExpand" HorizontalOptions="CenterAndExpand" ></Image>
            <Image Source="separator.png" Grid.Row="1" Grid.Column="1" VerticalOptions="Center" ></Image>


            <StackLayout  Grid.Row="2" Grid.Column="1" Spacing="16" >

                <StackLayout  VerticalOptions="Center" Margin="15,0,15,0" >
                    <custom:CustomEntry Placeholder="email" Text="{Binding Email.Value, Mode=TwoWay}" HorizontalOptions="FillAndExpand" 
                           >
                        <custom:CustomEntry.Behaviors>
                            <b:EventToCommandBehavior EventName="Unfocused" Command="{Binding Commands[LostFocusEmail]}" />
                            <b:EventToCommandBehavior EventName="Completed" Command="{Binding Commands[CompletedEmail]}" />
                        </custom:CustomEntry.Behaviors>

                        <custom:CustomEntry.Style>
                            <OnPlatform x:TypeArguments="Style">
                                <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />

                            </OnPlatform>
                        </custom:CustomEntry.Style>

                        <custom:CustomEntry.Triggers>
                            <Trigger TargetType="Entry"
                        Property="IsFocused" Value="True">
                                <Setter 
                            Property="TextColor"
                            Value="{StaticResource LightBrown}" />
                            </Trigger>
                            <DataTrigger 
                        TargetType="Entry"
                        Binding="{Binding Email.IsValid}"
                        Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" 
                                Value="{StaticResource ErrorColor}" />
                                <Setter Property="TextColor"
                                Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </custom:CustomEntry.Triggers>
                    </custom:CustomEntry>
                    <Label Text="{Binding Email.Errors,Converter={StaticResource firstValidationErrorConverter}}"
                    IsVisible="{Binding Email.Errors,Converter={StaticResource errorsToVisibilityConverter}}"
                    TextColor="{StaticResource BgCream}"/>
                </StackLayout>
                <StackLayout  VerticalOptions="Center" Margin="15,0,15,0" >
                    <custom:CustomEntry Placeholder="password" IsPassword="True" 
                       Text="{Binding Password.Value, Mode=TwoWay}" HorizontalOptions="FillAndExpand"
                       IsFocused="{Binding IsFocusedPassword}">


                        <custom:CustomEntry.Style>
                            <OnPlatform x:TypeArguments="Style">
                                <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />

                            </OnPlatform>
                        </custom:CustomEntry.Style>

                        <custom:CustomEntry.Triggers>
                            <Trigger TargetType="Entry"
                        Property="IsFocused" Value="True">
                                <Setter 
                            Property="TextColor"
                            Value="{StaticResource LightBrown}" />
                            </Trigger>
                            <DataTrigger 
                        TargetType="Entry"
                        Binding="{Binding Password.IsValid}"
                        Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" 
                                Value="{StaticResource ErrorColor}" />

                            </DataTrigger>
                        </custom:CustomEntry.Triggers>
                    </custom:CustomEntry>
                    <Label Text="{Binding Password.Errors,Converter={StaticResource firstValidationErrorConverter}}"
                    IsVisible="{Binding Password.Errors,Converter={StaticResource errorsToVisibilityConverter}}"
                    TextColor="{StaticResource BgCream}"/>
                    <Button Text="Forgotten Password?"   Command="{Binding Commands[ResetPassword]}" 
                        TextColor="{StaticResource WhiteCream}"
                HorizontalOptions="Center"
                BorderColor="Transparent"
                BackgroundColor="Transparent"
                FontSize="10"></Button>
                </StackLayout>
                
                
            </StackLayout>
            
            <Image Source="separator.png" Grid.Row="3" Grid.Column="1" VerticalOptions="Center"></Image>
            <StackLayout Grid.Row="4" Grid.Column="1">
                <StackLayout Orientation="{Binding ScreenOrientation,Mode=TwoWay}" HorizontalOptions="CenterAndExpand" VerticalOptions="Center">
                    <Button Text="Login"  Command="{Binding Commands[Login]}" IsVisible="{Binding IsVisibleImage,Converter={StaticResource boolToInvertBoolConverter}}"
                        Style="{StaticResource roundButtonStyle}">

                    </Button>

                    <forms:AnimationView 
	                x:Name="animationView" 
	                HeightRequest="128"
                    WidthRequest="128"
	                Animation="trail_loading.json" 
	                Loop="true" 
	                AutoPlay="true"
                    Speed="2"
	                IsVisible="{Binding IsVisibleImage}"
	                PlaybackStartedCommand="{Binding Commands[PlayingAnimation]}"
	                PlaybackFinishedCommand="{Binding Commands[FinishedAnimation]}" 
	                ClickedCommand="{Binding ClickedCommand}"
	                VerticalOptions="FillAndExpand" 
	                HorizontalOptions="FillAndExpand" />
                </StackLayout>
                <Label Text="{Binding ErrorLoginMessage}" 
                   HorizontalTextAlignment="Center"
                   FontSize="18"
                   IsVisible="{Binding ErrorLoginMessage,Converter={StaticResource stringToVisibilityConverter}}"
                   TextColor="{StaticResource WhiteCream}"/>
            </StackLayout>
        </Grid>
    </ContentPage.Content>
</ContentPage>